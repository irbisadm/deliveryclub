<?php

namespace Proxies\__CG__\DC\ShowcaseBundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class RestaurantPlace extends \DC\ShowcaseBundle\Entity\RestaurantPlace implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setDescription($description)
    {
        $this->__load();
        return parent::setDescription($description);
    }

    public function getDescription()
    {
        $this->__load();
        return parent::getDescription();
    }

    public function setActive($active)
    {
        $this->__load();
        return parent::setActive($active);
    }

    public function getActive()
    {
        $this->__load();
        return parent::getActive();
    }

    public function setRemoved($removed)
    {
        $this->__load();
        return parent::setRemoved($removed);
    }

    public function getRemoved()
    {
        $this->__load();
        return parent::getRemoved();
    }

    public function setCity(\DC\ShowcaseBundle\Entity\City $city = NULL)
    {
        $this->__load();
        return parent::setCity($city);
    }

    public function getCity()
    {
        $this->__load();
        return parent::getCity();
    }

    public function setRestaurant(\DC\ShowcaseBundle\Entity\Restaurant $restaurant = NULL)
    {
        $this->__load();
        return parent::setRestaurant($restaurant);
    }

    public function getRestaurant()
    {
        $this->__load();
        return parent::getRestaurant();
    }

    public function addWorkTime(\DC\ShowcaseBundle\Entity\RestaurantWorkTime $workTime)
    {
        $this->__load();
        return parent::addWorkTime($workTime);
    }

    public function removeWorkTime(\DC\ShowcaseBundle\Entity\RestaurantWorkTime $workTime)
    {
        $this->__load();
        return parent::removeWorkTime($workTime);
    }

    public function getWorkTime()
    {
        $this->__load();
        return parent::getWorkTime();
    }

    public function setStreet($street)
    {
        $this->__load();
        return parent::setStreet($street);
    }

    public function getStreet()
    {
        $this->__load();
        return parent::getStreet();
    }

    public function setLong($long)
    {
        $this->__load();
        return parent::setLong($long);
    }

    public function getLong()
    {
        $this->__load();
        return parent::getLong();
    }

    public function setLat($lat)
    {
        $this->__load();
        return parent::setLat($lat);
    }

    public function getLat()
    {
        $this->__load();
        return parent::getLat();
    }

    public function setIsValidated($isValidated)
    {
        $this->__load();
        return parent::setIsValidated($isValidated);
    }

    public function getIsValidated()
    {
        $this->__load();
        return parent::getIsValidated();
    }

    public function setIsConfirming($isConfirming)
    {
        $this->__load();
        return parent::setIsConfirming($isConfirming);
    }

    public function getIsConfirming()
    {
        $this->__load();
        return parent::getIsConfirming();
    }

    public function setConfirmingDescription($confirmingDescription)
    {
        $this->__load();
        return parent::setConfirmingDescription($confirmingDescription);
    }

    public function getConfirmingDescription()
    {
        $this->__load();
        return parent::getConfirmingDescription();
    }

    public function setNotifEmail($notifEmail)
    {
        $this->__load();
        return parent::setNotifEmail($notifEmail);
    }

    public function getNotifEmail()
    {
        $this->__load();
        return parent::getNotifEmail();
    }

    public function setNotifPhoneCode($notifPhoneCode)
    {
        $this->__load();
        return parent::setNotifPhoneCode($notifPhoneCode);
    }

    public function getNotifPhoneCode()
    {
        $this->__load();
        return parent::getNotifPhoneCode();
    }

    public function setNotifPhone($notifPhone)
    {
        $this->__load();
        return parent::setNotifPhone($notifPhone);
    }

    public function getNotifPhone()
    {
        $this->__load();
        return parent::getNotifPhone();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'street', 'long', 'lat', 'description', 'isValidated', 'isConfirming', 'confirmingDescription', 'notifEmail', 'notifPhoneCode', 'notifPhone', 'active', 'removed', 'city', 'restaurant', 'workTime');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}